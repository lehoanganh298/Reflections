1) What happens when you initialize a repository? Why do you need to do it?
- It creates a hidden directory named .git in the directory I initialize the repository.
--> This .git directory helps keep the meta infomation of the history of versions in the repository I just created.

2) How is the staging area different from the working directory and the repository? What value do you think it offers?
- The staging area is colletion of files that prepare to make a commit to the repository.
- The staging area's files are picked from the working directory.
--> The staging area help the action of commit become more simple, especially when commit multiple files, when we do not have to list all the files we want to commit.

3) How can you use the staging area to make sure you have one commit per logical change?
- Each time before I want to commit, I will use "git diff --staged" to list all the changes that are about to be commited.
--> I could check if all that changes form one and only one logical change.

4) What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- When collaboration: Each person make each part, each feature at the same time
--> Each person create a branch to work on, and merge to master when finish.
- When you make a change or new feature but then find that there are bug in several commits ago
--> Create new branch in that point when the bug appear to fix it, while still work on new feature
--> Merge the fix-bug branch to the new-feature branch when finish.
- When you want a official version always stay on top of the master branch so other people can access the latest official version easily
--> Create branch whenever start a new feature, so the woking-on-commits never appear on master branch.

5) How do the diagrams help you visualize the branch structure?
- It help me to know how many branch in the repository, which commits belong to them, and how they link to each other in the branch tree.